{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pootie\\\\pootie_app\\\\node_modules\\\\react-native-flatlist-slider\\\\src\\\\Indicator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport default Indicator = function Indicator(_ref) {\n  var itemCount = _ref.itemCount,\n      currentIndex = _ref.currentIndex,\n      indicatorStyle = _ref.indicatorStyle,\n      indicatorContainerStyle = _ref.indicatorContainerStyle,\n      indicatorActiveColor = _ref.indicatorActiveColor,\n      indicatorInActiveColor = _ref.indicatorInActiveColor,\n      _ref$indicatorActiveW = _ref.indicatorActiveWidth,\n      indicatorActiveWidth = _ref$indicatorActiveW === void 0 ? 6 : _ref$indicatorActiveW;\n  return React.createElement(View, {\n    style: [styles.container, indicatorContainerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, renderIndicator(itemCount, currentIndex, indicatorStyle, indicatorActiveColor, indicatorInActiveColor, indicatorActiveWidth));\n};\nexport var renderIndicator = function renderIndicator(count, currentIndex, indicatorStyle, indicatorActiveColor, indicatorInActiveColor, indicatorActiveWidth) {\n  var indicators = [];\n\n  for (var i = 0; i < count; i++) {\n    indicators.push(React.createElement(View, {\n      key: i.toString(),\n      style: [styles.indicator, indicatorStyle, i === currentIndex ? indicatorActiveColor ? _objectSpread(_objectSpread({}, styles.active), {\n        backgroundColor: indicatorActiveColor,\n        width: indicatorActiveWidth\n      }) : styles.active : _objectSpread(_objectSpread({}, styles.inactive), {\n        backgroundColor: indicatorInActiveColor\n      })],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return indicators;\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  indicator: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    marginRight: 5\n  },\n  active: {},\n  inactive: {}\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/pootie/pootie_app/node_modules/react-native-flatlist-slider/src/Indicator.js"],"names":["React","Indicator","itemCount","currentIndex","indicatorStyle","indicatorContainerStyle","indicatorActiveColor","indicatorInActiveColor","indicatorActiveWidth","styles","container","renderIndicator","count","indicators","i","push","toString","indicator","active","backgroundColor","width","inactive","StyleSheet","create","flexDirection","alignItems","alignSelf","height","borderRadius","marginRight"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,eAAgBC,SAAS,GAAG,yBAQtB;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,uBAII,QAJJA,uBAII;AAAA,MAHJC,oBAGI,QAHJA,oBAGI;AAAA,MAFJC,sBAEI,QAFJA,sBAEI;AAAA,mCADJC,oBACI;AAAA,MADJA,oBACI,sCADmB,CACnB;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBL,uBAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,eAAe,CACdT,SADc,EAEdC,YAFc,EAGdC,cAHc,EAIdE,oBAJc,EAKdC,sBALc,EAMdC,oBANc,CADlB,CADF;AAYD,CArBD;AAuBA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAC7BC,KAD6B,EAE7BT,YAF6B,EAG7BC,cAH6B,EAI7BE,oBAJ6B,EAK7BC,sBAL6B,EAM7BC,oBAN6B,EAO1B;AACH,MAAIK,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAApB,EAA2BE,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,UAAU,CAACE,IAAX,CACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAID,CAAC,CAACE,QAAF,EADT;AAEE,MAAA,KAAK,EAAE,CACLP,MAAM,CAACQ,SADF,EAELb,cAFK,EAGLU,CAAC,KAAKX,YAAN,GACIG,oBAAoB,mCAEbG,MAAM,CAACS,MAFM,GAGb;AACDC,QAAAA,eAAe,EAAEb,oBADhB;AAEDc,QAAAA,KAAK,EAAEZ;AAFN,OAHa,IAQlBC,MAAM,CAACS,MATb,mCAWST,MAAM,CAACY,QAXhB,GAYS;AAACF,QAAAA,eAAe,EAAEZ;AAAlB,OAZT,CAHK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAuBD;;AACD,SAAOM,UAAP;AACD,CAnCM;AAqCP,IAAMJ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,SAAS,EAAE;AAHF,GADoB;AAM/BT,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,CADE;AAETO,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,WAAW,EAAE;AAJJ,GANoB;AAY/BX,EAAAA,MAAM,EAAE,EAZuB;AAc/BG,EAAAA,QAAQ,EAAE;AAdqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {View, StyleSheet} from 'react-native';\n\nexport default (Indicator = ({\n  itemCount,\n  currentIndex,\n  indicatorStyle,\n  indicatorContainerStyle,\n  indicatorActiveColor,\n  indicatorInActiveColor,\n  indicatorActiveWidth = 6,\n}) => {\n  return (\n    <View style={[styles.container, indicatorContainerStyle]}>\n      {renderIndicator(\n        itemCount,\n        currentIndex,\n        indicatorStyle,\n        indicatorActiveColor,\n        indicatorInActiveColor,\n        indicatorActiveWidth,\n      )}\n    </View>\n  );\n});\n\nexport const renderIndicator = (\n  count,\n  currentIndex,\n  indicatorStyle,\n  indicatorActiveColor,\n  indicatorInActiveColor,\n  indicatorActiveWidth,\n) => {\n  let indicators = [];\n  for (let i = 0; i < count; i++) {\n    indicators.push(\n      <View\n        key = {i.toString()}\n        style={[\n          styles.indicator,\n          indicatorStyle,\n          i === currentIndex\n            ? indicatorActiveColor\n              ? {\n                  ...styles.active,\n                  ...{\n                    backgroundColor: indicatorActiveColor,\n                    width: indicatorActiveWidth,\n                  },\n                }\n              : styles.active\n            : {\n                ...styles.inactive,\n                ...{backgroundColor: indicatorInActiveColor},\n              },\n        ]}\n      />,\n    );\n  }\n  return indicators;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  indicator: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    marginRight: 5,\n  },\n  active: {\n  },\n  inactive: {\n  },\n});\n"]},"metadata":{},"sourceType":"module"}