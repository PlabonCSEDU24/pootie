{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pootie\\\\pootie_app\\\\src\\\\navigators\\\\DrawerNavigator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport TabNavigator from \"./TabNavigator\";\nimport AuthStack from \"./AuthStack\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { COLORS, FONTS } from \"../constants\";\nvar Drawer = createDrawerNavigator();\nvar drawers = [{\n  name: \"HomeTab\",\n  screen: TabNavigator,\n  label: \"Home\",\n  icon: \"home\"\n}, {\n  name: \"Auth\",\n  screen: AuthStack,\n  label: \"Login\",\n  icon: \"login\"\n}];\n\nvar DrawerNavigator = function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawer, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      }));\n    },\n    drawerContentOptions: {\n      activeTintColor: COLORS.lightGray4,\n      itemStyle: {\n        marginVertical: 3\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, drawers.map(function (_ref) {\n    var name = _ref.name,\n        icon = _ref.icon,\n        label = _ref.label,\n        screen = _ref.screen;\n    return React.createElement(Drawer.Screen, {\n      key: name,\n      name: name,\n      component: screen,\n      options: function options() {\n        return {\n          title: function title(_ref2) {\n            var focused = _ref2.focused;\n            return React.createElement(Text, {\n              style: _objectSpread({}, FONTS.body4),\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }\n            }, label);\n          },\n          drawerIcon: function drawerIcon(_ref3) {\n            var focused = _ref3.focused;\n            return React.createElement(AntDesign, {\n              name: icon,\n              size: 23,\n              color: focused ? COLORS.primary : COLORS.lightGray4,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }\n            });\n          }\n        };\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default DrawerNavigator;","map":{"version":3,"sources":["C:/Users/USER/Desktop/pootie/pootie_app/src/navigators/DrawerNavigator.js"],"names":["React","createDrawerNavigator","TabNavigator","AuthStack","CustomDrawer","AntDesign","COLORS","FONTS","Drawer","drawers","name","screen","label","icon","DrawerNavigator","props","activeTintColor","lightGray4","itemStyle","marginVertical","map","title","focused","body4","drawerIcon","primary"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB;AACA,IAAMC,MAAM,GAAGP,qBAAqB,EAApC;AACA,IAAMQ,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,MAAM,EAAET,YAFV;AAGEU,EAAAA,KAAK,EAAE,MAHT;AAIEC,EAAAA,IAAI,EAAE;AAJR,CADc,EAOd;AACEH,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,MAAM,EAAER,SAFV;AAGES,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,IAAI,EAAE;AAJR,CAPc,CAAhB;;AAcA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,SACE,oBAAC,MAAD,CAAQ,SAAR;AACE,IAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,aAAW,oBAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KADjB;AAEE,IAAA,oBAAoB,EAAE;AACpBC,MAAAA,eAAe,EAAEV,MAAM,CAACW,UADJ;AAEpBC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB;AAFS,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGV,OAAO,CAACW,GAAR,CAAY;AAAA,QAAGV,IAAH,QAAGA,IAAH;AAAA,QAASG,IAAT,QAASA,IAAT;AAAA,QAAeD,KAAf,QAAeA,KAAf;AAAA,QAAsBD,MAAtB,QAAsBA,MAAtB;AAAA,WACX,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAEC,MAHb;AAIE,MAAA,OAAO,EAAE;AAAA,eAAO;AACdU,UAAAA,KAAK,EAAE;AAAA,gBAAGC,OAAH,SAAGA,OAAH;AAAA,mBACL,oBAAC,IAAD;AACE,cAAA,KAAK,oBACAf,KAAK,CAACgB,KADN,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKGX,KALH,CADK;AAAA,WADO;AAUdY,UAAAA,UAAU,EAAE;AAAA,gBAAGF,OAAH,SAAGA,OAAH;AAAA,mBACV,oBAAC,SAAD;AACE,cAAA,IAAI,EAAET,IADR;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,KAAK,EAAES,OAAO,GAAGhB,MAAM,CAACmB,OAAV,GAAoBnB,MAAM,CAACW,UAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AAVE,SAAP;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CAPH,CADF;AAmCD,CApCD;;AAsCA,eAAeH,eAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport TabNavigator from \"./TabNavigator\";\r\nimport AuthStack from \"./AuthStack\";\r\nimport CustomDrawer from \"./CustomDrawer\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { COLORS, FONTS } from \"../constants\";\r\nconst Drawer = createDrawerNavigator();\r\nconst drawers = [\r\n  {\r\n    name: \"HomeTab\",\r\n    screen: TabNavigator,\r\n    label: \"Home\",\r\n    icon: \"home\",\r\n  },\r\n  {\r\n    name: \"Auth\",\r\n    screen: AuthStack,\r\n    label: \"Login\",\r\n    icon: \"login\",\r\n  },\r\n];\r\nconst DrawerNavigator = () => {\r\n  return (\r\n    <Drawer.Navigator\r\n      drawerContent={(props) => <CustomDrawer {...props} />}\r\n      drawerContentOptions={{\r\n        activeTintColor: COLORS.lightGray4,\r\n        itemStyle: { marginVertical: 3 },\r\n      }}\r\n    >\r\n      {drawers.map(({ name, icon, label, screen }) => (\r\n        <Drawer.Screen\r\n          key={name}\r\n          name={name}\r\n          component={screen}\r\n          options={() => ({\r\n            title: ({ focused }) => (\r\n              <Text\r\n                style={{\r\n                  ...FONTS.body4,\r\n                }}\r\n              >\r\n                {label}\r\n              </Text>\r\n            ),\r\n            drawerIcon: ({ focused }) => (\r\n              <AntDesign\r\n                name={icon}\r\n                size={23}\r\n                color={focused ? COLORS.primary : COLORS.lightGray4}\r\n              />\r\n            ),\r\n          })}\r\n        />\r\n      ))}\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default DrawerNavigator;\r\n"]},"metadata":{},"sourceType":"module"}