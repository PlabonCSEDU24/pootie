{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pootie\\\\pootie_app\\\\src\\\\navigators\\\\TabNavigator.js\";\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport \"react-native-gesture-handler\";\nimport Home from \"../screens/tabs/Home\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useRef } from \"react\";\nimport Login from \"../screens/auth/Login\";\nimport TabBarCustomButton from \"../components/TabBarCustomButton\";\nimport { COLORS, SIZES } from \"../constants\";\nimport ProfileStack from \"./ProfileStack\";\nimport HomeStack from \"./HomeStack\";\nimport Profile from \"../screens/tabs/Profile\";\nimport CreatePost from \"../screens/tabs/CreatePost\";\nvar Tab = createBottomTabNavigator();\nexport default function TabNavigator() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(React.Fragment, null, React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: \"white\",\n        bottom: 20,\n        marginHorizontal: SIZES.padding,\n        height: 60,\n        borderRadius: 10,\n        position: \"absolute\",\n        shadowColor: \"#000\",\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStack,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(AntDesign, {\n          name: \"home\",\n          size: 24,\n          color: focused ? COLORS.black : COLORS.lightGray4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(AntDesign, {\n          name: \"enviromento\",\n          size: 24,\n          color: focused ? COLORS.black : COLORS.lightGray4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton\",\n    component: CreatePost,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(MaterialIcons, {\n          name: \"post-add\",\n          size: 24,\n          color: COLORS.white,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(TabBarCustomButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 38\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(AntDesign, {\n          name: \"save\",\n          size: 24,\n          color: focused ? COLORS.black : COLORS.lightGray4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    listeners: function listeners(_ref7) {\n      var navigation = _ref7.navigation,\n          route = _ref7.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"profile\",\n    component: Profile,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(AntDesign, {\n          name: \"user\",\n          size: 24,\n          color: focused ? COLORS.black : COLORS.lightGray4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    listeners: function listeners(_ref9) {\n      var navigation = _ref9.navigation,\n          route = _ref9.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      width: getWidth() - 20,\n      height: 2,\n      backgroundColor: COLORS.primary,\n      position: \"absolute\",\n      bottom: 79,\n      left: 50,\n      borderRadius: 20,\n      transform: [{\n        translateX: tabOffsetValue\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/pootie/pootie_app/src/navigators/TabNavigator.js"],"names":["React","Home","MaterialIcons","createBottomTabNavigator","AntDesign","useRef","Login","TabBarCustomButton","COLORS","SIZES","ProfileStack","HomeStack","Profile","CreatePost","Tab","TabNavigator","tabOffsetValue","Animated","Value","current","showLabel","style","backgroundColor","bottom","marginHorizontal","padding","height","borderRadius","position","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","tabBarIcon","focused","black","lightGray4","navigation","route","tabPress","e","spring","toValue","useNativeDriver","start","getWidth","white","tabBarButton","props","primary","left","transform","translateX","Dimensions","get","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Animated, Dimensions, StyleSheet } from \"react-native\";\r\nimport \"react-native-gesture-handler\";\r\nimport Home from \"../screens/tabs/Home\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { useRef } from \"react\";\r\nimport Login from \"../screens/auth/Login\";\r\nimport TabBarCustomButton from \"../components/TabBarCustomButton\";\r\nimport { COLORS, SIZES } from \"../constants\";\r\nimport ProfileStack from \"./ProfileStack\";\r\nimport HomeStack from \"./HomeStack\";\r\nimport Profile from \"../screens/tabs/Profile\";\r\nimport CreatePost from \"../screens/tabs/CreatePost\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function TabNavigator() {\r\n  // Animated Tab Indicator...\r\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\r\n  return (\r\n    <>\r\n      <Tab.Navigator\r\n        tabBarOptions={{\r\n          showLabel: false,\r\n          style: {\r\n            backgroundColor: \"white\",\r\n\r\n            bottom: 20,\r\n            marginHorizontal: SIZES.padding,\r\n            height: 60,\r\n            borderRadius: 10,\r\n            position: \"absolute\",\r\n            shadowColor: \"#000\",\r\n            shadowOpacity: 0.06,\r\n            shadowOffset: {\r\n              width: 10,\r\n              height: 10,\r\n            },\r\n            paddingHorizontal: 20,\r\n          },\r\n        }}\r\n      >\r\n        {\r\n          // Tab Screens....\r\n          // Tab ICons....\r\n        }\r\n        <Tab.Screen\r\n          name={\"Home\"}\r\n          component={HomeStack}\r\n          options={{\r\n            tabBarIcon: ({ focused }) => (\r\n              <AntDesign\r\n                name=\"home\"\r\n                size={24}\r\n                color={focused ? COLORS.black : COLORS.lightGray4}\r\n              />\r\n            ),\r\n          }}\r\n          listeners={({ navigation, route }) => ({\r\n            // Onpress Update....\r\n            tabPress: (e) => {\r\n              Animated.spring(tabOffsetValue, {\r\n                toValue: 0,\r\n                useNativeDriver: true,\r\n              }).start();\r\n            },\r\n          })}\r\n        ></Tab.Screen>\r\n\r\n        <Tab.Screen\r\n          name={\"Search\"}\r\n          component={Home}\r\n          options={{\r\n            tabBarIcon: ({ focused }) => (\r\n              <AntDesign\r\n                name=\"enviromento\"\r\n                size={24}\r\n                color={focused ? COLORS.black : COLORS.lightGray4}\r\n              />\r\n            ),\r\n          }}\r\n          listeners={({ navigation, route }) => ({\r\n            // Onpress Update....\r\n            tabPress: (e) => {\r\n              Animated.spring(tabOffsetValue, {\r\n                toValue: getWidth(),\r\n                useNativeDriver: true,\r\n              }).start();\r\n            },\r\n          })}\r\n        ></Tab.Screen>\r\n\r\n        {\r\n          // Extra Tab Screen For Action Button..\r\n        }\r\n\r\n        <Tab.Screen\r\n          name={\"ActionButton\"}\r\n          component={CreatePost}\r\n          options={{\r\n            tabBarIcon: ({ focused }) => (\r\n              <MaterialIcons name=\"post-add\" size={24} color={COLORS.white} />\r\n            ),\r\n            tabBarButton: (props) => <TabBarCustomButton {...props} />,\r\n          }}\r\n        ></Tab.Screen>\r\n\r\n        <Tab.Screen\r\n          name={\"Notifications\"}\r\n          component={Home}\r\n          options={{\r\n            tabBarIcon: ({ focused }) => (\r\n              <AntDesign\r\n                name=\"save\"\r\n                size={24}\r\n                color={focused ? COLORS.black : COLORS.lightGray4}\r\n              />\r\n            ),\r\n          }}\r\n          listeners={({ navigation, route }) => ({\r\n            // Onpress Update....\r\n            tabPress: (e) => {\r\n              Animated.spring(tabOffsetValue, {\r\n                toValue: getWidth() * 3,\r\n                useNativeDriver: true,\r\n              }).start();\r\n            },\r\n          })}\r\n        ></Tab.Screen>\r\n\r\n        <Tab.Screen\r\n          name={\"profile\"}\r\n          component={Profile}\r\n          options={{\r\n            tabBarIcon: ({ focused }) => (\r\n              <AntDesign\r\n                name=\"user\"\r\n                size={24}\r\n                color={focused ? COLORS.black : COLORS.lightGray4}\r\n              />\r\n            ),\r\n          }}\r\n          listeners={({ navigation, route }) => ({\r\n            // Onpress Update....\r\n            tabPress: (e) => {\r\n              Animated.spring(tabOffsetValue, {\r\n                toValue: getWidth() * 4,\r\n                useNativeDriver: true,\r\n              }).start();\r\n            },\r\n          })}\r\n        ></Tab.Screen>\r\n      </Tab.Navigator>\r\n\r\n      <Animated.View\r\n        style={{\r\n          width: getWidth() - 20,\r\n          height: 2,\r\n          backgroundColor: COLORS.primary,\r\n          position: \"absolute\",\r\n          bottom: 79,\r\n          // Horizontal Padding = 20...\r\n          left: 50,\r\n          borderRadius: 20,\r\n          transform: [{ translateX: tabOffsetValue }],\r\n        }}\r\n      ></Animated.View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getWidth() {\r\n  let width = Dimensions.get(\"window\").width;\r\n\r\n  // Horizontal Padding = 20...\r\n  width = width - 80;\r\n\r\n  // Total five Tabs...\r\n  return width / 5;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}