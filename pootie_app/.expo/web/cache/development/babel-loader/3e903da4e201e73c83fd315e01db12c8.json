{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pootie\\\\pootie_app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport TabNavigator from \"./src/navigators/TabNavigator\";\nimport DrawerNavigator from \"./src/navigators/DrawerNavigator\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    border: \"transparent\"\n  })\n});\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    \"Roboto-Black\": require(\"./assets/fonts/Roboto-Black.ttf\"),\n    \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoaded(true);\n      },\n      onError: function onError() {\n        alert(\"could not load resources.\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(DrawerNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/pootie/pootie_app/App.js"],"names":["React","useState","Font","AppLoading","NavigationContainer","DefaultTheme","TabNavigator","DrawerNavigator","theme","colors","border","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","alert"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;;AAEA,IAAMC,KAAK,mCACNH,YADM;AAETI,EAAAA,MAAM,kCACDJ,YAAY,CAACI,MADZ;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAFG,EAAX;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOT,IAAI,CAACU,SAAL,CAAe;AACpB,sBAAkBC,OAAO,qCADL;AAEpB,oBAAgBA,OAAO,mCAFH;AAGpB,mBAAeA,OAAO;AAHF,GAAf,CAAP;AAKD,CAND;;AAQA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAoCb,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOc,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE,oBAAM;AACdK,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAJH;AAKE,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AACD,SACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAET,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Font from \"expo-font\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\nimport TabNavigator from \"./src/navigators/TabNavigator\";\r\nimport DrawerNavigator from \"./src/navigators/DrawerNavigator\";\r\n\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    border: \"transparent\",\r\n  },\r\n};\r\n\r\nconst fetchFonts = () => {\r\n  return Font.loadAsync({\r\n    \"Roboto-Regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\r\n    \"Roboto-Black\": require(\"./assets/fonts/Roboto-Black.ttf\"),\r\n    \"Roboto-Bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\r\n  });\r\n};\r\n\r\nexport default function App() {\r\n  const [fontLoaded, setFontLoaded] = useState(false);\r\n  //keep the splash screen displaying until fonts are loaded\r\n  if (!fontLoaded) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={fetchFonts}\r\n        onFinish={() => {\r\n          setFontLoaded(true);\r\n        }}\r\n        onError={() => {\r\n          alert(\"could not load resources.\");\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <NavigationContainer theme={theme}>\r\n      <DrawerNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}