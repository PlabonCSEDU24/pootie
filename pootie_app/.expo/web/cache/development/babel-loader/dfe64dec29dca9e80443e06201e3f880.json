{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\pootie\\\\pootie_app\\\\node_modules\\\\react-native-flatlist-slider\\\\src\\\\FlatListSlider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Indicator from \"./Indicator\";\nimport ChildItem from \"./ChildItem\";\n\nvar FlatListSlider = function (_Component) {\n  _inherits(FlatListSlider, _Component);\n\n  var _super = _createSuper(FlatListSlider);\n\n  function FlatListSlider(props) {\n    var _this;\n\n    _classCallCheck(this, FlatListSlider);\n\n    _this = _super.call(this, props);\n    _this.slider = createRef();\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems,\n          changed = _ref.changed;\n\n      if (viewableItems.length > 0) {\n        var currentIndex = viewableItems[0].index;\n\n        if (currentIndex % _this.props.data.length === _this.props.data.length - 1 && _this.props.loop) {\n          _this.setState({\n            index: currentIndex,\n            data: [].concat(_toConsumableArray(_this.state.data), _toConsumableArray(_this.props.data))\n          });\n        } else {\n          _this.setState({\n            index: currentIndex % _this.props.data.length\n          });\n        }\n\n        if (_this.props.currentIndexCallback) {\n          _this.props.currentIndexCallback(currentIndex);\n        }\n      }\n    };\n\n    _this.viewabilityConfig = {\n      viewAreaCoveragePercentThreshold: 50\n    };\n\n    _this.incrementSliderListIndex = function () {\n      var newIndex = _this.state.index + 1;\n\n      if (_this.props.animation) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeIn);\n      }\n\n      _this.setState({\n        index: newIndex\n      });\n\n      _this.slider.current.scrollToIndex({\n        index: newIndex % _this.props.data.length,\n        animated: true\n      });\n    };\n\n    _this.decrementSliderListIndex = function () {\n      if (_this.state.index > 0) {\n        var newIndex = _this.state.index - 1;\n\n        if (_this.props.animation) {\n          LayoutAnimation.configureNext(LayoutAnimation.Presets.easeIn);\n        }\n\n        _this.setState({\n          index: newIndex\n        });\n\n        _this.slider.current.scrollToIndex({\n          index: newIndex % _this.props.data.length,\n          animated: true\n        });\n      }\n    };\n\n    _this.startAutoPlay = function () {\n      _this.sliderTimer = setInterval(_this.incrementSliderListIndex, _this.props.timer);\n    };\n\n    _this.stopAutoPlay = function () {\n      if (_this.sliderTimer) {\n        clearInterval(_this.sliderTimer);\n        _this.sliderTimer = null;\n      }\n    };\n\n    _this.state = {\n      index: _this.props.initialScrollIndex,\n      data: _this.props.data\n    };\n\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n\n    return _this;\n  }\n\n  _createClass(FlatListSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onRef) {\n        this.props.onRef(this);\n      }\n\n      if (this.props.autoscroll) {\n        this.startAutoPlay();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onRef) {\n        this.props.onRef(undefined);\n      }\n\n      if (this.props.autoscroll) {\n        this.stopAutoPlay();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var itemWidth = this.props.width;\n      var separatorWidth = this.props.separatorWidth;\n      var totalItemWidth = itemWidth + separatorWidth;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        ref: this.slider,\n        windowSize: 3,\n        initialNumToRender: 5,\n        maxToRenderPerBatch: 5,\n        removeClippedSubviews: true,\n        horizontal: true,\n        pagingEnabled: true,\n        snapToInterval: totalItemWidth,\n        decelerationRate: \"fast\",\n        bounces: false,\n        contentContainerStyle: this.props.contentContainerStyle,\n        showsHorizontalScrollIndicator: false,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return React.cloneElement(_this2.props.component, {\n            style: {\n              width: _this2.props.width\n            },\n            item: item,\n            imageKey: _this2.props.imageKey,\n            onPress: _this2.props.onPress,\n            index: _this2.state.index % _this2.props.data.length,\n            active: index === _this2.state.index,\n            local: _this2.props.local,\n            height: _this2.props.height\n          });\n        },\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return React.createElement(View, {\n            style: {\n              width: _this2.props.separatorWidth\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return item.toString() + index;\n        },\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        getItemLayout: function getItemLayout(data, index) {\n          return {\n            length: totalItemWidth,\n            offset: totalItemWidth * index,\n            index: index\n          };\n        },\n        data: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), this.props.indicator && React.createElement(Indicator, {\n        itemCount: this.props.data.length,\n        currentIndex: this.state.index % this.props.data.length,\n        indicatorStyle: this.props.indicatorStyle,\n        indicatorContainerStyle: [styles.indicatorContainerStyle, this.props.indicatorContainerStyle],\n        indicatorActiveColor: this.props.indicatorActiveColor,\n        indicatorInActiveColor: this.props.indicatorInActiveColor,\n        indicatorActiveWidth: this.props.indicatorActiveWidth,\n        style: _objectSpread(_objectSpread({}, styles.indicator), this.props.indicatorStyle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return FlatListSlider;\n}(Component);\n\nFlatListSlider.defaultProps = {\n  data: [],\n  initialScrollIndex: 0,\n  imageKey: 'image',\n  local: false,\n  width: Math.round(Dimensions.get('window').width),\n  height: 230,\n  separatorWidth: 0,\n  loop: true,\n  indicator: true,\n  indicatorStyle: {},\n  indicatorContainerStyle: {},\n  indicatorActiveColor: '#3498db',\n  indicatorInActiveColor: '#bdc3c7',\n  indicatorActiveWidth: 6,\n  animation: true,\n  autoscroll: true,\n  timer: 3000,\n  onPress: {},\n  contentContainerStyle: {},\n  component: React.createElement(ChildItem, {\n    __self: FlatListSlider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  })\n};\nexport { FlatListSlider as default };\nvar styles = StyleSheet.create({\n  image: {\n    height: 230,\n    resizeMode: 'stretch'\n  },\n  indicatorContainerStyle: {\n    marginTop: 18\n  },\n  shadow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 3,\n        height: 3\n      },\n      shadowOpacity: 0.4,\n      shadowRadius: 10\n    },\n    android: {\n      elevation: 5\n    }\n  }))\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/pootie/pootie_app/node_modules/react-native-flatlist-slider/src/FlatListSlider.js"],"names":["React","Component","createRef","Indicator","ChildItem","FlatListSlider","props","slider","onViewableItemsChanged","viewableItems","changed","length","currentIndex","index","data","loop","setState","state","currentIndexCallback","viewabilityConfig","viewAreaCoveragePercentThreshold","incrementSliderListIndex","newIndex","animation","LayoutAnimation","configureNext","Presets","easeIn","current","scrollToIndex","animated","decrementSliderListIndex","startAutoPlay","sliderTimer","setInterval","timer","stopAutoPlay","clearInterval","initialScrollIndex","Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","onRef","autoscroll","undefined","itemWidth","width","separatorWidth","totalItemWidth","contentContainerStyle","item","cloneElement","component","style","imageKey","onPress","active","local","height","toString","offset","indicator","indicatorStyle","styles","indicatorContainerStyle","indicatorActiveColor","indicatorInActiveColor","indicatorActiveWidth","defaultProps","Math","round","Dimensions","get","StyleSheet","create","image","resizeMode","marginTop","shadow","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport {\n  FlatList,\n  View,\n  StyleSheet,\n  LayoutAnimation,\n  Platform,\n  UIManager,\n  Dimensions,\n} from 'react-native';\nimport Indicator from './Indicator';\nimport ChildItem from './ChildItem';\n\nexport default class FlatListSlider extends Component {\n  slider = createRef();\n\n  static defaultProps = {\n    data: [],\n    initialScrollIndex: 0,\n    imageKey: 'image',\n    local: false,\n    width: Math.round(Dimensions.get('window').width),\n    height: 230,\n    separatorWidth: 0,\n    loop: true,\n    indicator: true,\n    indicatorStyle: {},\n    indicatorContainerStyle: {},\n    indicatorActiveColor: '#3498db',\n    indicatorInActiveColor: '#bdc3c7',\n    indicatorActiveWidth: 6,\n    animation: true,\n    autoscroll: true,\n    timer: 3000,\n    onPress: {},\n    contentContainerStyle: {},\n    component: <ChildItem/>,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.props.initialScrollIndex,\n      data: this.props.data,\n    };\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n  }\n\n  componentDidMount() {\n    if( this.props.onRef){\n      this.props.onRef(this)\n    }\n    if (this.props.autoscroll) {\n      this.startAutoPlay();\n    }\n  }\n\n  componentWillUnmount() {\n    if( this.props.onRef){\n      this.props.onRef(undefined)\n    }\n   \n    if (this.props.autoscroll) {\n      this.stopAutoPlay();\n    }\n  }\n\n  render() {\n    const itemWidth = this.props.width;\n    const separatorWidth = this.props.separatorWidth;\n    const totalItemWidth = itemWidth + separatorWidth;\n\n    return (\n      <View>\n        <FlatList\n          ref={this.slider}\n          windowSize={3}\n          initialNumToRender={5}\n          maxToRenderPerBatch={5}\n          removeClippedSubviews={true}\n          horizontal\n          pagingEnabled={true}\n          snapToInterval={totalItemWidth}\n          decelerationRate=\"fast\"\n          bounces={false}\n          contentContainerStyle={this.props.contentContainerStyle}\n          showsHorizontalScrollIndicator={false}\n          renderItem={({item, index}) =>\n            React.cloneElement(this.props.component, {\n              style: {width: this.props.width},\n              item: item,\n              imageKey: this.props.imageKey,\n              onPress: this.props.onPress,\n              index: this.state.index % this.props.data.length,\n              active: index === this.state.index,\n              local: this.props.local,\n              height: this.props.height,\n            })\n          }\n          ItemSeparatorComponent={() => (\n            <View style={{width: this.props.separatorWidth}} />\n          )}\n          keyExtractor={(item, index) => item.toString() + index}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          viewabilityConfig={this.viewabilityConfig}\n          getItemLayout={(data, index) => ({\n            length: totalItemWidth,\n            offset: totalItemWidth * index,\n            index,\n          })}\n          data={this.state.data}\n        />\n        {this.props.indicator && (\n          <Indicator\n            itemCount={this.props.data.length}\n            currentIndex={this.state.index % this.props.data.length}\n            indicatorStyle={this.props.indicatorStyle}\n            indicatorContainerStyle={[\n              styles.indicatorContainerStyle,\n              this.props.indicatorContainerStyle,\n            ]}\n            indicatorActiveColor={this.props.indicatorActiveColor}\n            indicatorInActiveColor={this.props.indicatorInActiveColor}\n            indicatorActiveWidth={this.props.indicatorActiveWidth}\n            style={{...styles.indicator, ...this.props.indicatorStyle}}\n          />\n        )}\n      </View>\n    );\n  };\n\n  onViewableItemsChanged = ({viewableItems, changed}) => {\n    if (viewableItems.length > 0) {\n      let currentIndex = viewableItems[0].index;\n      if (\n        currentIndex % this.props.data.length === this.props.data.length - 1 &&\n        this.props.loop\n      ) {\n        this.setState({\n          index: currentIndex,\n          data: [...this.state.data, ...this.props.data],\n        });\n      } else {\n        this.setState({index: currentIndex%this.props.data.length});\n      }\n\n      if (this.props.currentIndexCallback) {\n        this.props.currentIndexCallback(currentIndex);\n      }\n    }\n  };\n\n  viewabilityConfig = {\n    viewAreaCoveragePercentThreshold: 50,\n  };\n\n   incrementSliderListIndex = () => {\n     let newIndex = this.state.index + 1;\n    if (this.props.animation) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeIn);\n    }\n    this.setState({index: newIndex});\n    this.slider.current.scrollToIndex({\n      index: newIndex%this.props.data.length,\n      animated: true,\n    });\n  };\n\n  decrementSliderListIndex = () => {\n    if( this.state.index>0){\n      let newIndex = this.state.index - 1;\n      if (this.props.animation) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeIn);\n      }\n      this.setState({index: newIndex});\n      this.slider.current.scrollToIndex({\n        index: newIndex%this.props.data.length,\n        animated: true,\n      });\n    }\n  };\n\n  startAutoPlay = () => {\n    this.sliderTimer = setInterval(\n      this.incrementSliderListIndex,\n      this.props.timer,\n    );\n  };\n\n  stopAutoPlay = () => {\n    if (this.sliderTimer) {\n      clearInterval(this.sliderTimer);\n      this.sliderTimer = null;\n    }\n  };\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    height: 230,\n    resizeMode: 'stretch',\n  },\n  indicatorContainerStyle: {\n    marginTop: 18,\n  },\n  shadow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: {width: 3, height: 3},\n        shadowOpacity: 0.4,\n        shadowRadius: 10,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}